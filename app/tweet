#!/usr/bin/env php
<?php 

require_once __DIR__.'/../vendor/autoload.php';
require_once __DIR__.'/../vendor/dg/twitter-php/src/twitter.class.php';

use Pogotc\MarkovGenerator;
use Symfony\Component\Yaml\Yaml;

$config = Yaml::parse(__DIR__.'/../config/config.yml');

if(!is_array($config))
{
	echo "Could not load config/config.yml\n";
	exit();
}

$consumerKey = $config['twitter']['consumerKey'];
$consumerSecret = $config['twitter']['consumerSecret'];
$accessToken = $config['twitter']['accessToken'];
$accessTokenSecret = $config['twitter']['accessTokenSecret'];

$twitter = new Twitter($consumerKey, $consumerSecret, $accessToken, $accessTokenSecret);

$args = $_SERVER['argv'];

if(count($args) < 2){
	echo "Missing path to input\n";
	exit();
}

$path = $args[1];
if(strpos($path, "/") === 0){
	$fullPath = $path;
}else{
	$fullPath = __DIR__.'/../'.$path;
}

if(!file_exists($fullPath)){
	echo "Could not find file at ".$fullPath."\n";
	exit();
}

$sendTweet = true;
if(isset($args[2]) && $args[2] == '--no-send'){
	$sendTweet = false;
}

echo "Found input\n";
echo "Building Markov Map\n";
$markov = new MarkovGenerator();
$markov->loadFromFile($fullPath);

echo "Generating Tweet\n";

$starterWords = $config['markov']['starterWords'];
$randomIdx = array_rand($starterWords);

if(count($starterWords)){
	$tweet = $markov->getStreamStartingWith($starterWords[$randomIdx], 140);
}else{
	$tweet = $markov->getStartingWithRandomCapitalisedWord(140);
}

if($sendTweet){
	echo "Sending Tweet\n";
	$r = $twitter->send($tweet);

	echo "Sent!\n";
}else{
	echo $tweet."\n\n";
	echo "Not sending\n";
}